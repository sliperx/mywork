apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config-freenance
  namespace: pgadmin
data:
  servers.json: |
    {
      "Servers": {
        "1": {
          "Name": "freenance-prod",
          "Group": "Servers",
          "Port": 5432,
          "Username": "freeuser",
          "Host": "postgresdb.finance-prod.svc.cluster.local",
          "SSLMode": "prefer",
          "MaintenanceDB": "freenance"
        },
        "2": {
          "Name": "freenance-dev",
          "Group": "Servers",
          "Port": 5432,
          "Username": "freeuser",
          "Host": "postgresdb.finance-dev.svc.cluster.local",
          "SSLMode": "prefer",
          "MaintenanceDB": "freenance"
        },
        "3": {
          "Name": "freenance-qa",
          "Group": "Servers",
          "Port": 5432,
          "Username": "freeuser",
          "Host": "postgresdb.finance-qa.svc.cluster.local",
          "SSLMode": "prefer",
          "MaintenanceDB": "freenance"
        },
        "4": {
          "Name": "freenance-dev-slave",
          "Group": "Servers",
          "Port": 5432,
          "Username": "freeuser",
          "Host": "postpostgresdb-slave.finance-dev.svc.cluster.local",
          "SSLMode": "prefer",
          "MaintenanceDB": "freenance"
        },
        "5": {
          "Name": "freenance-dev-qa",
          "Group": "Servers",
          "Port": 5432,
          "Username": "freeuser",
          "Host": "finance-dev.finance-qa.svc.cluster.local",
          "SSLMode": "prefer",
          "MaintenanceDB": "freenance"
        }
      }
    }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pgadmin-backup-freenance
spec:
  capacity:
    storage: 100Mi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /data/freenancePgadmin
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service-freenance
  namespace: pgadmin
spec:
  type: ClusterIP
  selector:
    app: pgadmin-freenance
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgadmin-freenance
  namespace: pgadmin
spec:
  serviceName: pgadmin-service-freenance
  podManagementPolicy: Parallel
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: pgadmin-freenance
  template:
    metadata:
      labels:
        app: pgadmin-freenance
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: pgadmin4
        image: dpage/pgadmin4
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        resources:
          limits:
            cpu: "1"
            memory: "250Mi"
          requests:
            cpu: "50m"
            memory: "100Mi"
        env:
        - name: PGADMIN_DEFAULT_EMAIL
          value: "admin@admin.com"
        - name: PGADMIN_DEFAULT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgadmin-secret-freenance
              key: password
        - name: PGADMIN_PORT
          value: "80"
        ports:
        - containerPort: 80
          name: pgadminport
        volumeMounts:
        - name: pgadmin-config-freenance
          mountPath: /pgadmin4/servers.json
          subPath: servers.json
          readOnly: true
        - name: pgadmin-data-freenance
          mountPath: /var/lib/pgadmin/
      volumes:
      - name: pgadmin-config-freenance
        configMap:
          name: pgadmin-config-freenance
      - name: pgadmin-data-freenance
        persistentVolumeClaim:
          claimName: pgadmin-data-freenance
  volumeClaimTemplates:
  - metadata:
      name: pgadmin-data-freenance
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Mi
